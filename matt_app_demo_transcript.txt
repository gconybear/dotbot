Hey guys, so I wanted to give a quick demo of the Tupac Analytics app. This is what we went over yesterday in the revenue management meeting, but I know you guys are traveling and everything, so I wanted to give a sort of rehash of what we went over. I'm not gonna go a full hour here, but just give you a quick tour of what this app is and what it does and how it can be used most effectively. Otherwise, to find this app, I sent out an email with that hyperlink attached to it, or you can select the Ops Data Science Slack channel. I also sent it out here. We'll have a better way of organizing all this, maybe a master list to include all the different apps and sort of a directory to find that, but for now, yeah, it's just listed here under Ops Data Science. And this version is actually a local version, and that just has a little bit added to it. It has a different tab, the predictions tab, so when you're looking at it, you're only seeing the facility tab and the deployed version, and I'll go over that at the end of this video, but I just wanted to show some things that will be coming later, and also it's a good insight into how Tupac's working, but what you will be looking at is this facility tab. So, what you want to do is you want to select whatever RD you want to take a look at, and the idea of this section is it should make manual changes a lot easier, should be a lot more intuitive. I know you guys have been looking at that summary sheet to gauge whether we're pricing correctly compared to our competitors. I'll still be sending that out each week, at least in the meantime, but this is hopefully an easier way to take a look and see where we're pricing, but the general idea here is it should make manual changes easier and should make it very clear very quickly whether we're priced in a manner that makes sense with what our competitors are doing. So, you'll select the facility here under competitor price comparison, and I'll go over this relatively quickly just because I know you're not going to be trying to listen to me like I'm a YouTube streamer or something, but under competitor price comparison, when you expand this, it shows you essentially the important fields that you're familiar with with the summary file. So, you have what site you're looking at, the unit occupancy of that site, and when this data was pulled. Something important here is that the data you'll be looking at here will always be from when street rates were uploaded, so it's a snapshot in time of, you know, Monday night. And so, when you're looking at the competitor prices and you're looking at the vacant units, that's what it was as of when street rates were uploaded. So, this is what Tupac was looking at when it made its decision. Something you can do is here select to use current data, and that will pull the most recent data from Redline, and you'll see those updated changes reflected in the table. I just want to make it clear that when you select this, it uploads things like our street rates, and it should upload vacant units and what our percent occupancy is right now, and take the most up-to-date information. So, for example, if you made a manual change and you wanted to see that in this table, you'd want to use the current data. Otherwise, it's showing you essentially what the summary sheet would show you, which is just that snapshot in time. What use current data will not do is it will not update competitor data. That is because competitor prices we pull every Monday, and then that's our last, our last poll. So, whenever you're looking at the competitor prices and you use current data, it will still be showing you competitor prices from what they were at Monday. So, looking at this chart, I won't go over every column here, but again, the idea here is that it's the summary sheet, but a little bit more streamlined. You can see here the red dot to competitor rate ratio. I have some things like highlighting it on a gradient, so the higher this red dot to competitor rate ratio is, the darker shade of blue it'll be, whereas if it's the smallest ratio, it'll be white. Another thing you can do here is you can easily filter, so if you want to look at where we price the most relative to competitors versus the least, and you'll have that average competitor price right here. And with competitor prices, just a reminder of how we're doing this, we're averaging the price if we have competitors with that unit hash. So, for example, we have competitors with 5x10s. If they have listed prices, then we take that actual average, but if we didn't have any competitors with 5x10s, then we estimate that with a curve fit, and that's when this will be selected, this curve fit field. RD1 is kind of a nice example because we have actual competitors for all these unit hashes, but that's what this curve fit field is showing. Otherwise, you have the competitor average, the minimum competitor price, the max, our price per square foot, and then some information on what our occupancy is looking like. So, this is shaded in a similar manner where the more vacant units there are, the darker shade of blue this will be, and as well as our total units and our adjusted percent occupancy. So, this is a great way to see, okay, what's our price? Where are we relative to competitors? Does that make sense based on the percent occupancy and how many vacant units we have available? You know, if you're at zero vacant units and you're way under what you're charging, or sorry, what competitors are charging, maybe it makes sense to raise the street rate. So, basically, it's used in the same way you've been using it with that summary file. It should just be a little bit more streamlined. So, and some options here under select columns to display. Price info is what you'll mainly be looking at, and that's what we were just looking at there, but competitor data info has some example, has some information on what that competitor data actually looks like. So, what we're using for RD1 shows you how many total competitors we have, how many competitors have that unit hash, and then here it's percent backfilled and last pull. So, what I mean by backfilled is we don't pull the prices of every unit hash every week. That could be because it's a REIT taking off their pricing. That could be because the data is hard to scrape and, you know, we don't, we can't get to it every week. Whatever the reason, this is to show you how many of those competitors were actually backfilled, so we're using their last listed price, and that latest pull is when's the latest up-to-date data we got on that unit hash. And this is February 26th because I actually pulled this data in Sunday night in preparation for this week, but this just shows that we pulled in data for each of these unit hashes in the latest run. And here you have the percent that are REITs, single operators, multi operators. This gives you a breakdown of where these unit hashes are falling in competitors. So, you know, the REITs have every single one of these unit hashes, but you'll notice here it says none, and that's because with these REITs, single operators, multi operators, whenever pulling the data we get store IDs and their pricing. We do have information on most of the store IDs, and we know what store it is, whether it's a REIT, single operator, multi operator, but we don't have that for every store. So, when you're looking at the information here, this is all because if something doesn't line up like having a none here, it's because we pull two different unit hashes with pricing, but we just don't know what those stores are. I believe this is something that should be easily remedied where we just need to get the information on what those store IDs are from StoreTrack, but just wanted to flag that when you're taking a look at this. Otherwise, here you can display the price per square foot line charts. So, similar to the competitor pricing app you guys have been using, it's showing you that power curve, and an important difference here is the way Tupac is operating, it's always looking at the competitor average. So, rather than looking at individual lines for each competitor, this is the rolled up average. So, that's what you're looking at in this blue line. Those are the comps. The red line is us, and just keep in mind that if you're looking at a facility that has climate control units, this will be separated into climate control units and a separate plot for non-climate control units. Alright, and here you have, under historical competitor price comparison, you have a time series of what our prices have done relative to competitors. So, you see this light blue is the red dot street rate, and the dark blue are the competitors. So, you can select all, which is the default, and when you select all, that's, you know, averaging every unit hash. You can also zoom in, zoom out. A lot of the times it might be, might be more illustrative of what's actually going on by zooming in like this. Just always keep in mind of the scale of your y-axis, so you can see whether these, these gaps are actually significant or not. And what you can do is you can separate this by every unit hash of that facility. So, I'll look at the 10 by 10s, and it'll show you how our 10 by 10s have trended compared to the competitor average. And then another thing you can do here is you can separate by company type. So, you separate by the REITs, multi operators, and single operators. That's because, as you can see this red line, that's the single operators. They're not changing their prices very often. Even this dark blue line, the multi operators aren't changing their prices in this case, but this light blue line are the REITs. And, you know, they use dynamic pricing just like we do, so it's, it's always interesting to see where they're pricing compared to us. And here are the actual listed competitor prices, and this is where you can see what stores are at that unit, have that unit hash, what kind of company they are, what they're charging, what our curve fit price is. So, this is what we expect them to price. And date pulled, as well as backfilled. And date pulled, as I was talking earlier, date pulled is when we last got information, pricing info, on this particular unit hash, and backfilled says whether, you know, we didn't get it on the latest run, whether it was backfilled from a previous date. So, this is a good way to show what sort of data we're using, and just with the nature of StoreTrack, you know, it is web scraping, so it can be a little bit messy. I like this example in particular, RD1, because it has some peculiarities we discussed on Wednesday. You can see here that we pulled this price way back in May of last year, and that's the last time we pulled it, so I doubt they were full for that long. Well, if you take a look, that's because when it was pulled that day, it pulled the unit dimensions as 1010 by zero. So, this is a simple fix. I'm just not going to include this in the competitor data from here on out, but this is a good example of how taking a look at this data, you can kind of see, all right, well, what are the competitors doing, and what sort of data are we working with, and, you know, is it the most up-to-date? Is it from our latest pull, or, you know, have we not been getting it for a few weeks? Maybe that's because it's a REIT, and they took their price off because they're full. It gives a little bit of insight into that. This is another interesting example where this was pulled back in July was the last time we got this. Well, it's a place for space Baxter Road, but we got a place for space Sandy Hollow Road in the latest run, so, you know, this kind of begs the question, is this the same place? They just changed their name, like, are these roads at an intersection? They just decided to change their name in StoreTrack. You know, why aren't we getting a price from one facility when we are getting it from the other? These are things to look for just to see, okay, well, what sort of data are we using to make our decision? And it's a good way to vet it, as well as just take individual looks at where these competitors are pricing. And again, you can select by unit hash, or you can select all if you'd like to. So, that's what you guys will be using under this facility tab. That's what's in the deployed app. That was kind of a quick rundown, but let me know if you have any questions. If you see any way to improve it, make it better, please let me know. This will have pretty frequent updates. I mean, nothing major is going to change on this facility tab. I'll make things a little cleaner. If you guys have recommendations or see any errors, please let me know and I'll make those changes. But otherwise, it should help you make manual changes a lot easier and be able to see where we are relative to competitors and if that makes intuitive sense. So, essentially, it's a much better next-gen summary sheet. So, let me know what you guys think, and I'd be happy to make any adjustments or answer any questions. So, that's what you guys are looking at right now with the facility tab. Another thing to note is one thing we want to do is we want you to be able to select a region first and then select a facility. This isn't built out yet, but this should be relatively easy to put in, so it should be there shortly. But when you're looking to select region that's not working, that's why. Otherwise, so that's it for what's deployed right now. I just wanted to talk about predictions tab, which will be made available on the next street rate run, and it's just going to show you why Tupac is making its predictions. So, this is some options to pick a bunch of different facilities that are running under Tupac right now. So, again, this is just to illustrate an example of what's going on, and it's just that Tupac is trying to predict what move-ins we get at each price relative to competitors, and based on what expected move-ins we're thinking of getting and the rate at which we're thinking we're getting those move-ins, that's the revenue we can expect, and that's what it's optimizing. You know, we want whatever the max number for the optimized revenue is, is what street rate Tupac thinks is optimal. So, to show here, I have a plot where it's listing a specific example, RD55, non-climate controlled, 5x10. I believe this is priced at $40 in this example, yeah. And this just shows what's happening with Tupac, like what it's looking at and how it's making its decision. So, this graph here just shows you how the comp ratio changes with street prices. Obviously, that's linear, nothing exciting there. But so what Tupac's doing is it's looking at what the expected move-ins are at every street price. Well, in this case, I'm looking at from a range of 20 to 80. So, cutting rates in half and doubling them, what happens at each rate? So, we have an expected move-ins at each of those street price. And so then, with those expected move-ins, you know, at $66, we're expecting about 0.3 move-ins. And real quick, what this means by expected move-ins is just if we were to rerun this week over and over and over again and record each time how many move-ins we got, if you take the average of that, that's the expected move-ins. So, you know, in this case where it says 0.3, that means there's going to be a bunch of weeks where there's going to be 0 move-ins, there's going to be a few weeks where there's one move-in, maybe there's a week where there's two move-ins. What Tupac is doing is it's saying if you average those all out, this is what you would get on average. And it's similar to like a coin flip. You're expecting 0.5 heads each time you flip a coin. So, the way Tupac is looking at this is it's maximizing the expected revenue. So, again, through the move-ins, it looks at different street prices, sees how many people are going to be moving in or how many it anticipates, and then how much revenue are we going to get. You know, the higher the price, the fewer move-ins we get, but the lower the price, we'll get more people in. So, it's not exactly clear what's the better move. So, what it's looking at is the expected revenue of the street price times the expected move-ins, and it looks for the optimal price. So, this is a good example where we have a very clear peak, at least we have an area that's a very clear peak. So, Tupac is saying that at $50, we're maximizing our revenue, and that's the optimum. So, what you're going to look for in this plot, and this has come up with some of Alicia's properties, or at least, you know, we talked about it with RD88 and 123, but either way, when there's situations of dropping occupancy and increasing vacancy, and, you know, our prices just keep rising compared to the competitors, the reason for that is probably because this curve for that unit hash is pretty flat. And what Tupac is thinking is that if you can imagine a flat line across this 0.4, Tupac is looking at it and saying, well, if we price $80, we're going to get 0.4 move-ins. If we price $20, we're also going to get 0.4 move-ins. Well, if people are going to move in at any price, might as well charge the higher price. So, is that correct? You know, that depends. It could be because of the noise in the data. It could be, it's true that there's inelastic prices there. Tupac will learn this over time. That being said, when you're seeing that situation of rising prices with dropping occupancy, it's probably because this price elasticity curve is relatively flat. So, when you'll be looking at this tab, again, this will be made available on Monday, it should be able to explain why Tupac is making that decision. Again, manual changes, more than welcome. Really encouraged because Tupac is still going to learn on whatever prices you set. Otherwise, that's the rundown real quick, and that's basically what we went over yesterday. Let me know if you have any questions, any improvements, any ideas. Otherwise, I'm going to send out a sheet that has this all summarized as well. But thanks guys, and you'll hear from me soon.